{"version":3,"file":"static/js/79.6601f4e5.chunk.js","mappings":"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","sources":["components/AuthForms/LoginForm/LoginForm.styled.js","components/elements/ButtonREG/ButtonRegistration.jsx","components/elements/ButtonREG/ButtonRegistration.styled.js","components/AuthForms/CreatePasswordForm/CreatePasswordForm.styled.js","components/AuthForms/CreatePasswordForm/CreatePasswordForm.jsx","pages/Home.jsx","pages/Page.styled.js","services/Messages/NotifyMessages.jsx","services/constant.js","services/auth.js","services/schemas.js"],"sourcesContent":["import theme from \"components/baseStyles/Variables.styled\";\nimport styled from \"styled-components\";\nimport { Field } from \"formik\";\nimport { Link } from \"react-router-dom\";\n\nexport const FormContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  max-width: 400px;\n  padding-top: 80px;\n`;\nexport const Title = styled.h1`\n  color: ${theme.colors.text};\n  font-size: ${theme.fontSizes.extra30};\n  font-style: normal;\n  text-align: center;\n  font-family: ${theme.fonts[0]};\n  font-weight: 700;\n  line-height: normal;\n  letter-spacing: 0;\n  text-transform: none;\n  padding-bottom: 40px;\n`;\nexport const BtnContainer = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: row;\n  width: 100%;\n  gap: 16px;\n`;\nexport const OrContainer = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: row;\n  width: 100%;\n  height: 16px;\n  margin: 30px 0;\n`;\nexport const OrLine = styled.div`\n  position: absolute;\n  top: 50%;\n  display: block;\n  width: 100%;\n  border-bottom: 1px solid ${theme.colors.borders};\n`;\nexport const OrTitle = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 28px;\n  color: ${theme.colors.grey};\n  font-size: ${theme.fontSizes.extrasmall12};\n  font-style: normal;\n  font-family: ${theme.fonts[0]};\n  font-weight: 500;\n  line-height: 16px;\n  letter-spacing: 0;\n  text-transform: none;\n  background-color: ${theme.colors.white};\n  z-index: 20;\n`;\nexport const ErrorBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: -5px;\n  left: 15px;\n  margin-bottom: -16px;\n  color: #e53e3e;\n\n  font-family: ${theme.fonts[0]};\n  font-size: ${theme.fontSizes.small14};\n  font-style: normal;\n  line-height: 1.4;\n  letter-spacing: 0.03em;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    left: 32px;\n  }\n`;\n\nexport const ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 62%;\n  transform: translateY(-80%);\n  color: grey;\n\n  cursor: pointer;\n\n  & svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nexport const Input = styled(Field)`\n  display: flex;\n  width: 100%;\n  padding: 14px 12px;\n  position: relative;\n  width: 100%;\n  max-width: 400px;\n  border: 1px solid ${theme.colors.borders};\n  box-sizing: border-box;\n  align-items: center;\n  border-radius: 6px;\n  justify-content: flex-start;\n  background-color: ${theme.colors.white};\n  color: ${theme.colors.black};\n  font-size: ${theme.fontSizes.small15};\n  font-style: normal;\n  font-family: ${theme.fonts[0]};\n  font-weight: 400;\n  line-height: 20px;\n  letter-spacing: 0;\n  text-transform: none;\n  &:placeholder {\n    color: ${theme.colors.inputText};\n  }\n`;\nexport const SubMessageLeft = styled.div`\n  display: flex;\n  justify-content: end;\n  align-items: center;\n  width: 100%;\n`;\nexport const LinkTo = styled(Link)`\n  text-decoration: none;\n  color: ${theme.colors.blue};\n  font-size: ${theme.fontSizes.small14};\n  font-style: normal;\n  text-align: right;\n  font-family: ${theme.fonts[0]};\n  font-weight: 500;\n  line-height: 20px;\n  margin-bottom: 0;\n  letter-spacing: 0;\n  text-transform: none;\n`;\nexport const SubMessageCentre = styled(SubMessageLeft)`\n  justify-content: center;\n  margin-bottom: 0px;\n  margin-top: 20px;\n`\nexport const Subtitle = styled.span`\n  color: ${theme.colors.primary};\n  font-size: ${theme.fontSizes.extrasmall12};\n  line-height: 16px;\n  letter-spacing: 0;\n  padding: 0 4px;\n`","import React from \"react\";\nimport { ButtonREG } from \"./ButtonRegistration.styled\";\n\nexport const ButtonRegistration = ({title, name, disabled}) => {\n    return (\n    <ButtonREG title={title} disabled={disabled}>{name}</ButtonREG>)\n}","import theme from 'components/baseStyles/Variables.styled';\nimport styled from 'styled-components';\n\nexport const ButtonREG = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    padding: 13px;\n    min-height: 22px;\n    text-align: center;\n    margin-top: 30px;\n    margin-bottom: 0;\n    color: ${theme.colors.white};\n    font-size: ${theme.fontSizes.small16};\n    font-style: normal;\n    font-family: ${theme.fonts[0]};\n    font-weight: 500;\n    line-height: 21px;\n    letter-spacing: 0;\n    text-transform: none;\n    max-width: 400px;\n    border-radius: 8px 8px 8px 8px;\n    background-color: ${theme.colors.blue};\n    cursor: pointer;\n    border: none;\n    &:disabled {\n      opacity: 0.6;\n    }\n  `;","import styled from \"styled-components\";\n\nimport theme from \"components/baseStyles/Variables.styled\";\nimport { ButtonREG } from \"components/elements/ButtonREG/ButtonRegistration.styled\";\n\nexport const BtnCancel = styled(ButtonREG)`\ncolor: ${theme.colors.black};\nbackground-color: ${theme.colors.white};\nborder: 1px solid ${theme.colors.grey}\n`;\n","import React, { useContext, useState } from 'react';\nimport { useFormik, Formik, Form } from 'formik';\nimport { ImEye, ImEyeBlocked } from 'react-icons/im';\nimport schemas from 'services/schemas';\nimport { FormContainer, Title, ErrorBox,  ShowPassword, Input} from '../LoginForm/LoginForm.styled';\nimport theme from 'components/baseStyles/Variables.styled';\nimport { ButtonRegistration } from 'components/elements/ButtonREG/ButtonRegistration';\nimport { BtnCancel } from './CreatePasswordForm.styled';\nimport { clearData } from 'services/localStorService';\nimport { useNavigate  } from \"react-router-dom\";\nimport { StatusContext } from \"components/ContextStatus/ContextStatus\";\nimport { LogOut, changePassword } from 'services/auth';\n\n\n\n\nexport const CreatePasswordForm = () => {\n  \n  const [showPass, setShowPass] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const { setAuth } = useContext(StatusContext);\n\n  const handleOut = (e) => {\n    clearData();\n    navigate('/');\n    setAuth(null);\n    LogOut();\n  }\n  \n  const onSubmit = values => {\n    setIsLoading(true);\n    const { email, password } = values;\n    const auth = changePassword({email, password});\n    console.log(\"auth\", auth)\n    setIsLoading(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      password: '',\n      confirmPassword: '',\n    },\n    validationSchema: schemas.updatePasswordSchema,\n    onSubmit,\n  });\n\n  const isValid =\n    (formik.errors.password && formik.touched.password && formik.errors.confirmPassword && formik.touched.confirmPassword) \n      ? true\n      : false;\n\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n\n  const showAccentValidateInput = (hasValue, isValide) => {\n    return !hasValue\n      ? null\n      : isValide\n      ? `${theme.colors.red}`\n      : `${theme.colors.green}`;\n  };\n\n  return (\n<FormContainer>\n  <Title>Create new Password?</Title>\n    <Formik validationSchema={schemas.updatePasswordSchema}>\n      <Form style={{width:\"100%\", display:\"flex\", flexDirection:\"column\", gap:\"25px\", marginBottom:\"15px\"}} onSubmit={formik.handleSubmit} autoComplete=\"off\">\n          <div style={{width:\"100%\", position:\"relative\"}}>\n            <Input\n              style={{\n                borderColor: showAccentValidateInput(\n                  formik.values.password,\n                  formik.errors.password,\n                ),\n              }}\n              name=\"password\"\n              type={showPass ? 'text' : 'password'}\n              validate={schemas.updatePasswordSchema.password}\n              onChange={formik.handleChange}\n              value={formik.values.password}\n              onBlur={formik.handleBlur}\n              placeholder='Password'\n            />\n            <ShowPassword onClick={showPassword}>\n              {!showPass ? <ImEyeBlocked /> : <ImEye />}\n            </ShowPassword>\n            {formik.errors.password || formik.touched.password ? (\n              <ErrorBox>{formik.errors.password}</ErrorBox>\n            ) : null}\n          </div>\n          <div style={{width:\"100%\", position:\"relative\"}}>\n            <Input\n              style={{\n                borderColor: showAccentValidateInput(\n                  formik.values.confirmPassword,\n                  formik.errors.confirmPassword,\n                ),\n              }}\n              name=\"confirmPassword\"\n              type={showPass ? 'text' : 'password'}\n              onChange={formik.handleChange}\n              value={formik.values.confirmPassword}\n              onBlur={formik.handleBlur}\n              placeholder='Password'\n            />\n\n            <ShowPassword onClick={showPassword}>\n              {!showPass ? <ImEyeBlocked /> : <ImEye />}\n            </ShowPassword>\n            {formik.errors.confirmPassword && formik.touched.confirmPassword ? (\n              <ErrorBox>{formik.errors.confirmPassword}</ErrorBox>\n            ) : null}\n          </div>\n\n          <ButtonRegistration type=\"submit\" disabled={isValid} aria-label='Reset Password' title ={'Reset Password'} name={isLoading ? 'Loading' : \"Reset Password\"}/>\n      </Form>\n    </Formik>\n\n    <BtnCancel type=\"button\"  aria-label='Log Out' title ='Log Out' onClick={handleOut}>Log Out</BtnCancel>\n  \n</FormContainer>\n  );\n};\n","import React from 'react';\nimport { PageContainer } from './Page.styled';\nimport { CreatePasswordForm } from 'components/AuthForms/CreatePasswordForm/CreatePasswordForm';\n\nconst HomePage = () => {\n  window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n\n  return (\n    <PageContainer>\n        <CreatePasswordForm/>\n    </PageContainer>\n\n  );\n};\n\nexport default HomePage;\n","import styled from 'styled-components';\n\nexport const PageContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nwidth: 100%;\nheight: 100vh;\n`;","import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst onFetchError = text => {\n  return Notify.failure(`${text}`);\n};\n\nconst onInfo = text => {\n  return Notify.info(`${text}`);\n};\n\nconst onSuccess = text => {\n  return Notify.success(`${text}`);\n};\n\nexport { onFetchError, onInfo, onSuccess };\n","export const BASE_URL=\"https://auth-qa.qencode.com/v1\"","import axios from \"axios\";\nimport { BASE_URL } from \"./constant\";\nimport { onFetchError, onSuccess } from \"./Messages/NotifyMessages\";\n\nconst setAuthHeader = (token) => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\nconst clearAuthHeader = () => {\n  axios.defaults.headers.common.Authorization = \"\";\n};\n\nexport const signUp = async (credentials) => {\n  try {\n    const res = await axios.post(`${BASE_URL}/auth/signup`, credentials);\n    if (res) {\n      setAuthHeader(res.access_token);\n    }\n    onSuccess(\"Success\");\n    return res;\n  } catch (error) {\n    onFetchError(`Error: ${error.message}`);\n    return error.message;\n  }\n};\n\nexport const LogIn = async (credentials) => {\n  try {\n    const res = await axios.post(`${BASE_URL}/auth/login`, credentials);\n    if (res) {\n      setAuthHeader(res.access_token);\n    }\n    onSuccess(\"Success\");\n    return res;\n  } catch (error) {\n    onFetchError(`Error: ${error.message}`);\n    return error.message;\n  }\n};\n\nexport const changePassword = async (credentials) => {\n  try {\n    const res = await axios.post(`${BASE_URL}/auth/password-set`, credentials);\n    if (res) {\n      setAuthHeader(res.access_token);\n    }\n    onSuccess(\"Success\");\n    return res;\n  } catch (error) {\n    onFetchError(`Error: ${error.message}`);\n    return error.message;\n  }\n};\n\nexport const forgotPassword = async (credentials) => {\n  try {\n    const res = await axios.post(\n      `${BASE_URL}/auth/password-reset`,\n      credentials\n    );\n    onSuccess(\"Success\");\n    return res;\n  } catch (error) {\n    onFetchError(`Error: ${error.message}`);\n    return error.message;\n  }\n};\n\nexport const LogOut = async () => {\n  try {\n    const res = await axios.post(`${BASE_URL}/auth/logout`);\n    if (res) {\n      clearAuthHeader();\n    }\n    onSuccess(\"Success\");\n    return res;\n  } catch (error) {\n    onFetchError(`Error: ${error.message}`);\n    return error.message;\n  }\n};\n\nexport const accessToken = async () => {\n  try {\n    const res = await axios.post(`${BASE_URL}/auth/access-token`);\n    if (res) {\n      setAuthHeader(res.access_token);\n    }\n    onSuccess(\"Success\");\n    return res;\n  } catch (error) {\n    onFetchError(`Error: ${error.message}`);\n    return error.message;\n  }\n};\n\nexport const refreshToken = async () => {\n  try {\n    const res = await axios.post(`${BASE_URL}/auth/refresh-token`);\n    if (res) {\n      setAuthHeader(res.access_token);\n    }\n    onSuccess(\"Success\");\n    return res;\n  } catch (error) {\n    onFetchError(`Error: ${error.message}`);\n    return error.message;\n  }\n};\n","import * as Yup from 'yup';\n\nconst registerSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^\\s*\\S+\\s*$/, 'Email must be without spaces')\n    .matches(/\\S{7,}/, 'Email too short (min 7 symbols)')\n    .matches(\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\n      'Invalid email',\n    )\n    .matches(\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\n      'Dashes should only be inside email',\n    )\n    .required('Require field'),\n  password: Yup.string()\n    .min(8, 'Password too short (min 8)')\n    .max(32, 'Password too long (max 32)')\n    .matches(/^\\s*\\S+\\s*$/, 'Password must be without spaces')\n    .required('Require field'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password')], 'Password must match')\n    .required('Require field'),\n});\n\nconst schemasLogin = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^\\s*\\S+\\s*$/, 'Email must be without spaces')\n    .matches(/\\S{7,}/, 'Email too short (min 7 symbols)')\n    .matches(\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\n      'Invalid email',\n    )\n    .matches(\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\n      'Dashes should only be inside email',\n    )\n    .required('Require'),\n  password: Yup.string()\n    .min(8, 'Password too short (min 8)')\n    .max(32, 'Password too long (max 32)')\n    .matches(/^\\s*\\S+\\s*$/, 'Password must be without spaces')\n    .required('Require'),\n});\n\nconst changePasswordSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^\\s*\\S+\\s*$/, 'Email must be without spaces')\n    .matches(/\\S{7,}/, 'Email too short (min 7 symbols)')\n    .matches(\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\n      'Invalid email',\n    )\n    .matches(\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\n      'Dashes should only be inside email',\n    )\n    .required('Require field'),\n});\n\nconst updatePasswordSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(8, 'Password too short (min 8)')\n    .max(32, 'Password too long (max 32)')\n    .matches(/^\\s*\\S+\\s*$/, 'Password must be without spaces')\n    .required('Require field'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password')], 'Your passwords do not match')\n    .required('Require field'),\n});\n\n\nconst schemas = {\n  registerSchema,\n  schemasLogin,\n  changePasswordSchema,\n  updatePasswordSchema,\n};\n\nexport default schemas;\n"],"names":["FormContainer","styled","div","_templateObject","_taggedTemplateLiteral","Title","h1","_templateObject2","theme","colors","text","fontSizes","extra30","fonts","BtnContainer","_templateObject3","OrContainer","_templateObject4","OrLine","_templateObject5","borders","OrTitle","span","_templateObject6","grey","extrasmall12","white","ErrorBox","_templateObject7","small14","breakpoints","tablet","ShowPassword","_templateObject8","Input","Field","_templateObject9","black","small15","inputText","SubMessageLeft","_templateObject10","LinkTo","Link","_templateObject11","blue","SubMessageCentre","_templateObject12","Subtitle","_templateObject13","primary","ButtonRegistration","_ref","title","name","disabled","_jsx","ButtonREG","children","button","small16","BtnCancel","CreatePasswordForm","showPass","setShowPass","useState","isLoading","setIsLoading","navigate","useNavigate","setAuth","useContext","StatusContext","formik","useFormik","initialValues","password","confirmPassword","validationSchema","schemas","updatePasswordSchema","onSubmit","values","email","auth","changePassword","console","log","isValid","errors","touched","showPassword","showAccentValidateInput","hasValue","isValide","concat","red","green","_jsxs","Formik","Form","style","width","display","flexDirection","gap","marginBottom","handleSubmit","autoComplete","position","borderColor","type","validate","onChange","handleChange","value","onBlur","handleBlur","placeholder","onClick","ImEye","ImEyeBlocked","e","clearData","LogOut","HomePage","window","scrollTo","top","left","behavior","PageContainer","onFetchError","Notify","failure","onInfo","info","onSuccess","success","BASE_URL","setAuthHeader","token","axios","defaults","headers","common","Authorization","LogIn","async","res","post","credentials","access_token","error","message","forgotPassword","registerSchema","Yup","shape","matches","required","min","max","oneOf","schemasLogin","changePasswordSchema"],"sourceRoot":""}